# Generated by Django 4.2.1 on 2024-04-10 14:53

from django.db import migrations, models
import gcna_data.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assorting_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('amount_assorted', models.FloatField(default=0)),
                ('contract_num', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Citrus_Mango_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('No_of_Bearing_Trees_Lime', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Lime')),
                ('No_of_Bearing_Trees_Lemon', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Lemon')),
                ('No_of_Bearing_Trees_Mangoes', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Mangoes')),
                ('Estimated_Productiom_Lime', models.IntegerField(default=0, verbose_name='What is the estimated production of Lime')),
                ('Estimated_Productiom_Lemon', models.IntegerField(default=0, verbose_name='What is the estimated production of Lemon')),
                ('Estimated_Productiom_Mangoes', models.IntegerField(default=0, verbose_name='What is the estimated production of Mangoes')),
                ('No_of_Non_Bearing_Trees_Lime', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Lime')),
                ('No_of_Non_Bearing_Trees_Lemon', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Lemon')),
                ('No_of_Non_Bearing_Trees_Mangoes', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Mangoes')),
                ('Presence_of_Disease_Lime', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Lime')),
                ('Presence_of_Disease_Lemon', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Lemon')),
                ('Presence_of_Disease_Mangoes', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Mangoes')),
                ('Cultivation_Lime', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Lime cultivation')),
                ('Cultivation_Lemon', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Lemon cultivation')),
                ('Cultivation_Mangoes', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Mangoes cultivation')),
            ],
        ),
        migrations.CreateModel(
            name='Coconut_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator'), ('Other', 'Other')], max_length=100, null=True)),
                ('End_Use_Atlantic_Tall', models.CharField(max_length=50, null=True, verbose_name='What is the intended end use if the Atlantic Tall Tree')),
                ('End_Use_Dwarf', models.CharField(max_length=50, null=True, verbose_name='What is the intended end use of the Dwarf Tree')),
                ('No_of_Bearing_Trees_Atlantic_Tall', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Atlantic Tall Trees')),
                ('No_of_Bearing_Trees_Dwarf', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Dwarf Trees')),
                ('Estimated_Productiom_Atlantic_Tall', models.IntegerField(default=0, verbose_name='What is the estimated production of Atlantic Tall Trees')),
                ('Estimated_Productiom_Dwarf', models.IntegerField(default=0, verbose_name='What is the estimated production of Dwarf Trees')),
                ('No_of_Non_Bearing_Trees_Atlantic_Tall', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Atlantic Tall Trees')),
                ('No_of_Non_Bearing_Trees_Dwarf', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing Dwarf Trees')),
                ('Presence_of_Disease_Atlantic_Tall', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Atlantic Tall Trees')),
                ('Presence_of_Disease_Dwarf', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Dwarf Trees')),
                ('Cultivation_Atlantic_Tall', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Atlantic Tall Tree cultivation')),
                ('Cultivation_Dwarf', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Dwarf Tree cultivation')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Weeds', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the weeds?')),
                ('Drains', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the drains Drains')),
                ('Fertilizing', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the Fertilizing')),
                ('Pruning', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the Pruning')),
                ('Harvesting', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the Harvesting')),
                ('Land_Clearing', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the Land_Clearing')),
                ('Planting', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of the Planting')),
                ('Presence_of_pest_and_diseases_on_nutmegs', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1, verbose_name='What is the state of pests and diseases?')),
                ('Presence_of_pest_and_diseases_on_nutmegs_cont', models.CharField(max_length=50, null=True, verbose_name='Elaborate the pest and dieseases present,if any.')),
            ],
        ),
        migrations.CreateModel(
            name='Cracking_Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Batch_Code', models.CharField(blank=True, max_length=50, null=True)),
                ('Total_Bags_Used', models.FloatField(default=0)),
                ('new_code', models.CharField(blank=True, max_length=50, null=True)),
                ('remaining_bags', models.FloatField(default=0)),
                ('station', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cracking_Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('STATION', models.CharField(choices=[('', '--Select Location--'), ('H', 'Beaulieu'), ('M', 'Gouyave'), ('G', 'Grenville')], max_length=50, null=True, verbose_name='Station')),
                ('DATE_OF_CRACKING', models.DateField(null=True, verbose_name='Date of cracking')),
                ('WAREHOUSE_RECEIPT_NUMBERS', models.CharField(max_length=50, null=True, verbose_name='Warehouse Reciept Number')),
                ('NUM_OF_BAGS', models.IntegerField(default=0, verbose_name='Number of Bags')),
                ('LBS_OF_NUTMEGS_CRACKED', models.IntegerField(default=0, verbose_name='Lbs of Nutmegs cracked')),
                ('Delivery_Advice_Num', models.IntegerField(default=0, verbose_name='Number of Bags')),
                ('Control_Num', models.IntegerField(default=0, verbose_name='Number of Bags')),
            ],
        ),
        migrations.CreateModel(
            name='crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dispatch_Of_Dried_Nutmeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('STATION', models.CharField(choices=[('', '--Select Location--'), ('G', 'Grenville'), ('H', 'Hermitage'), ('M', 'Marli'), ('U', 'Union'), ('GP', 'Gouyave')], max_length=50, null=True, verbose_name='Station')),
                ('DATE_OF_PICK_UP', models.DateField(null=True, verbose_name='Date of pick up')),
                ('FINAL_MOISTURE_CONTENT', models.IntegerField(default=0, verbose_name='Final moisture content')),
                ('ShelfG', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('Section', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('Shelf', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('Tray', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfG_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfG_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfG_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('1', '1'), ('2', '2')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('BATCH_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Batch Number')),
                ('CORRESPONDING_DELIVERY_ADVICE', models.CharField(max_length=50, null=True, verbose_name='Corresponding Delivery Advice')),
                ('Control_number', models.IntegerField(default=0, verbose_name='Control Number')),
            ],
        ),
        migrations.CreateModel(
            name='Dispatch_Of_Green_Nutmeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('STATION', models.CharField(choices=[('', '--Select Location--'), ('G', 'Grenville'), ('H', 'Hermitage'), ('M', 'Marli'), ('U', 'Union'), ('GP', 'Gouyave'), ('V', 'Victoria')], max_length=50, null=True, verbose_name='Station')),
                ('DATE_OF_PURCHASE', models.DateField(null=True, verbose_name='Date of purchase')),
                ('TOTAL_NUM_OF_FARMERS', models.IntegerField(default=0, verbose_name='Total Numbers of Farmers')),
                ('TOTAL_LBS_NUTMEG_BOUGHT', models.IntegerField(default=0, verbose_name='Total lbs of nutmeg bought')),
                ('NUM_OF_BAGS', models.IntegerField(default=0, verbose_name='Number of Bags')),
                ('DELIVERY_ADVICE_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Delivery  advice Number')),
                ('WAREHOUSE_RECEIPT_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Warehouse Reciept Number')),
                ('CONTROL_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Control Number')),
            ],
        ),
        migrations.CreateModel(
            name='Dried_Moisture_Analysis_A',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('DATE_OF_SAMPLING', models.DateField(blank=True, null=True, verbose_name='Date of Sampling')),
                ('STATION', models.CharField(blank=True, max_length=50, null=True)),
                ('BATCH_CODE', models.IntegerField(blank=True, default=0)),
                ('Quantity_of_Bags', models.IntegerField(blank=True, default=0)),
                ('Quantity_of_Sample', models.IntegerField(blank=True, default=0)),
                ('Total_Weight', models.FloatField(blank=True, default=0)),
                ('Initial_Sample_Weight', models.FloatField(blank=True, default=0)),
                ('Insect_Damaged', models.FloatField(blank=True, default=0)),
                ('Broken', models.FloatField(blank=True, default=0)),
                ('Mould', models.FloatField(blank=True, default=0)),
                ('Final_Sample_Weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30)),
                ('READING_1', models.CharField(blank=True, max_length=50, null=True)),
                ('READING_2', models.CharField(blank=True, max_length=50, null=True)),
                ('READING_3', models.CharField(blank=True, max_length=50, null=True)),
                ('AVERAGE', models.CharField(blank=True, max_length=50, null=True)),
                ('DECISION', models.CharField(blank=True, choices=[('', 'What was the decision made?'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=50, null=True)),
                ('Comments', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY', models.CharField(blank=True, max_length=50, null=True)),
                ('APPROVED_BY', models.CharField(blank=True, max_length=50, null=True)),
                ('DATE_OF_REPORT', models.DateField(blank=True, null=True, verbose_name='Date of Report')),
                ('SIGNED_BY_QUALITY_ASSURANCE_OFFICER', models.CharField(blank=True, max_length=50, null=True)),
                ('DATE', models.DateField(blank=True, null=True, verbose_name='Current Date')),
            ],
        ),
        migrations.CreateModel(
            name='Dried_Moisture_Analysis_B',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('DATE_OF_SAMPLING', models.DateField(blank=True, null=True, verbose_name='Date of Sampling')),
                ('STATION', models.CharField(blank=True, max_length=50, null=True)),
                ('BATCH_CODE', models.IntegerField(blank=True, default=0)),
                ('Total_Quantity_of_Bags_in_Non_Compliance', models.IntegerField(blank=True, default=0)),
                ('Total_Weight_of_Nutmeg_in_Non_Compliance', models.IntegerField(blank=True, default=0)),
                ('Additional_Drying_Period1', models.CharField(blank=True, max_length=50, null=True)),
                ('Additional_Drying_Period2', models.CharField(blank=True, max_length=50, null=True)),
                ('Additional_Drying_Period3', models.CharField(blank=True, max_length=50, null=True)),
                ('Initial_Sample_Weight', models.FloatField(blank=True, default=0)),
                ('Insect_Damaged', models.FloatField(blank=True, default=0)),
                ('Broken', models.FloatField(blank=True, default=0)),
                ('Mould', models.FloatField(blank=True, default=0)),
                ('Final_Sample_Weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30)),
                ('READING_1', models.CharField(blank=True, max_length=50, null=True)),
                ('READING_2', models.CharField(blank=True, max_length=50, null=True)),
                ('READING_3', models.CharField(blank=True, max_length=50, null=True)),
                ('AVERAGE', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=200)),
                ('DECISION', models.CharField(blank=True, choices=[('', 'What was the decision made?'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=50, null=True)),
                ('Comments', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY', models.CharField(blank=True, max_length=50, null=True)),
                ('APPROVED_BY', models.CharField(blank=True, max_length=50, null=True)),
                ('DATE_OF_REPORT', models.DateField(blank=True, null=True, verbose_name='Date of Report')),
                ('SIGNED_BY_QUALITY_ASSURANCE_OFFICER', models.CharField(blank=True, max_length=50, null=True)),
                ('DATE', models.DateField(blank=True, null=True, verbose_name='Current Date')),
            ],
        ),
        migrations.CreateModel(
            name='Editors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_name', models.CharField(max_length=200)),
                ('num_users', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Extractor_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('amount_extracted', models.FloatField(default=0)),
                ('contract_num', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farm_House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Farm_House', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is a Farm house present')),
            ],
        ),
        migrations.CreateModel(
            name='Farm_Water_Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Municipal_Nawasa', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('River', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Spring', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Well', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Harvested_Rain_Water', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('is_water_treated', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is the water source treated')),
                ('is_water_treated_cont', models.CharField(blank=True, max_length=50, null=True, verbose_name='If the water was treated. How?')),
            ],
        ),
        migrations.CreateModel(
            name='Farmer_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('age', models.CharField(choices=[('A', '18-25'), ('B', '26-35'), ('C', '36-50'), ('D', '51-65'), ('D', '66+')], default='A', max_length=1)),
                ('home_phone', models.CharField(max_length=50, null=True)),
                ('mobile_phone', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Floated_Moisture_Analysis_A',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('DATE_OF_SAMPLING_H', models.DateField(null=True, verbose_name='Date of Heavy Sampling')),
                ('DATE_OF_SAMPLING_L', models.DateField(null=True, verbose_name='Date of Light Sampling')),
                ('STATION', models.CharField(max_length=50, null=True)),
                ('BATCH_CODE', models.IntegerField(default=0)),
                ('Quantity_of_Sample_H', models.IntegerField(default=0)),
                ('Total_Weight_H', models.FloatField(default=0)),
                ('Initial_Sample_Weight_H', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('Quantity_of_Sample_L', models.IntegerField(default=0)),
                ('Total_Weight_L', models.FloatField(default=0)),
                ('Initial_Sample_Weight_L', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('Insect_Damaged_H', models.FloatField(default=0)),
                ('Broken_H', models.FloatField(default=0)),
                ('Mould_H', models.FloatField(default=0)),
                ('Final_Sample_Weight_H', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('Insect_Damaged_L', models.FloatField(default=0)),
                ('Broken_L', models.FloatField(default=0)),
                ('Mould_L', models.FloatField(default=0)),
                ('Final_Sample_Weight_L', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('READING_1_H', models.FloatField(default=0)),
                ('READING_2_H', models.FloatField(default=0)),
                ('READING_3_H', models.FloatField(default=0)),
                ('AVERAGE_H', models.DecimalField(decimal_places=2, default=0, max_digits=200)),
                ('DECISION_H', models.CharField(choices=[('', 'What was the decision made?'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=50, null=True)),
                ('Comments_H', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY_H', models.CharField(max_length=50, null=True)),
                ('DATE_H', models.DateField(null=True, verbose_name='Current Date')),
                ('READING_1_L', models.FloatField(default=0)),
                ('READING_2_L', models.FloatField(default=0)),
                ('READING_3_L', models.FloatField(default=0)),
                ('AVERAGE_L', models.DecimalField(decimal_places=2, default=0, max_digits=200)),
                ('DECISION_L', models.CharField(choices=[('', 'What was the decision made?'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=50, null=True)),
                ('Comments_L', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY_L', models.CharField(max_length=50, null=True)),
                ('DATE_L', models.DateField(null=True, verbose_name='Current Date')),
                ('Approved_BY', models.CharField(max_length=50, null=True)),
                ('Station_Manager', models.CharField(max_length=50, null=True)),
                ('DATE_OF_REPORT', models.DateField(null=True, verbose_name='Date of Report')),
                ('SIGNED_BY_Quality_Assurance_Officer', models.CharField(max_length=50, null=True)),
                ('DATE', models.DateField(null=True, verbose_name='Current Date')),
            ],
        ),
        migrations.CreateModel(
            name='Floated_Moisture_Analysis_B',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('DATE_OF_SAMPLING_H', models.DateField(null=True, verbose_name='Date of Heavy Sampling')),
                ('DATE_OF_SAMPLING_L', models.DateField(null=True, verbose_name='Date of Light Sampling')),
                ('STATION', models.CharField(max_length=50, null=True)),
                ('Total_Quantity_of_Bags_in_Non_Compliance_H', models.IntegerField(default=0)),
                ('Total_Weight_of_Nutmeg_in_Non_Compliance_H', models.FloatField(default=0)),
                ('Additional_Drying_Period_days_H', models.IntegerField(default=0)),
                ('Total_Weight_H', models.FloatField(default=0)),
                ('Total_Quantity_of_Bags_in_Non_Compliance_L', models.IntegerField(default=0)),
                ('Total_Weight_of_Nutmeg_in_Non_Compliance_L', models.FloatField(default=0)),
                ('Additional_Drying_Period_days_L', models.IntegerField(default=0)),
                ('Total_Weight_L', models.FloatField(default=0)),
                ('Initial_Sample_Weight_H', models.FloatField(default=0)),
                ('Broken_H', models.FloatField(default=0)),
                ('Mould_H', models.FloatField(default=0)),
                ('Insect_Damaged_H', models.FloatField(default=0)),
                ('Final_Sample_Weight_H', models.FloatField(default=0)),
                ('Initial_Sample_Weight_L', models.FloatField(default=0)),
                ('Broken_L', models.FloatField(default=0)),
                ('Mould_L', models.FloatField(default=0)),
                ('Insect_Damaged_L', models.FloatField(default=0)),
                ('Final_Sample_Weight_L', models.FloatField(default=0)),
                ('READING_1_H', models.FloatField(default=0)),
                ('READING_2_H', models.FloatField(default=0)),
                ('READING_3_H', models.FloatField(default=0)),
                ('AVERAGE_H', models.FloatField(default=0)),
                ('DECISION_H', models.CharField(max_length=50, null=True)),
                ('Comments_H', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY_H', models.CharField(max_length=50, null=True)),
                ('DATE_H', models.DateField(null=True, verbose_name='Current Date')),
                ('READING_1_L', models.FloatField(default=0)),
                ('READING_2_L', models.FloatField(default=0)),
                ('READING_3_L', models.FloatField(default=0)),
                ('AVERAGE_L', models.FloatField(default=0)),
                ('DECISION_L', models.CharField(max_length=50, null=True)),
                ('Comments_L', models.TextField(blank=True)),
                ('TEST_PERFORMED_BY_L', models.CharField(max_length=50, null=True)),
                ('DATE_L', models.DateField(null=True, verbose_name='Current Date')),
                ('SIGNED_BY', models.CharField(max_length=50, null=True)),
                ('Station_Manager', models.CharField(max_length=50, null=True)),
                ('DATE_OF_REPORT', models.DateField(null=True, verbose_name='Date of Report')),
                ('SIGNED_BY_Quality_Assurance_Officer', models.CharField(max_length=50, null=True)),
                ('DATE', models.DateField(null=True, verbose_name='Signed On')),
            ],
        ),
        migrations.CreateModel(
            name='Floation_Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STATION', models.CharField(choices=[('', '--Select Location--'), ('G', 'Beaulieu'), ('GP', 'Gouyave')], max_length=50, null=True, verbose_name='Station')),
                ('START_DRYING_DATE', models.DateField(null=True, verbose_name='Start drying date')),
                ('APPROX_END_DRYING_DATE', models.DateField(null=True, verbose_name='Approximate end drying date')),
                ('END_DRYING_DATE', models.DateField(null=True, verbose_name='End drying date')),
                ('ShelfG_light', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_light', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_light', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_light', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfG_heavy', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_heavy', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_heavy', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_heavy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_light', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_light', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_light', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_light', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfH_heavy', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_heavy', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_heavy', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_heavy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_light', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_light', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_light', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_light', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfM_heavy', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_heavy', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_heavy', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_heavy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_light', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_light', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_light', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_light', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfU_heavy', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_heavy', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_heavy', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_heavy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_light', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_light', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_light', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_light', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('ShelfGP_heavy', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_heavy', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_heavy', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_heavy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Station')),
                ('BATCH_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Batch Number')),
                ('Control_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Batch Number')),
            ],
        ),
        migrations.CreateModel(
            name='Food_Safety_and_Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Fertilizer', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is fertilizer used?')),
                ('Fertilizer_cont', models.CharField(max_length=50, null=True, verbose_name='If fertilizer is used, What are they?')),
                ('Last_application', models.CharField(max_length=50, null=True, verbose_name='When was the last application of fertilizer')),
                ('Picture', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Raw_Manure', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is raw manure used?')),
                ('Raw_Manure_cont', models.CharField(max_length=50, null=True, verbose_name='If raw manure is used, What type?')),
                ('Composed_manure', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is composed manure used?')),
                ('Other', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fumigation_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('contract_num', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='In_House_Drying',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STATION', models.CharField(choices=[('', '--Select Location--'), ('G', 'Grenville'), ('H', 'Hermitage'), ('M', 'Marli'), ('U', 'Union'), ('GP', 'Gouyave')], max_length=50, null=True, verbose_name='Station')),
                ('entryCheck', models.CharField(default=gcna_data.models.shelf_id, max_length=20)),
                ('DATE_OF_PURCHASE', models.DateField(null=True, verbose_name='Date of Purchase')),
                ('PLACE_OF_PURCHASE', models.CharField(max_length=50, null=True, verbose_name='Place of Purchase ')),
                ('TOTAL_NUM_OF_FARMERS', models.IntegerField(default=0, verbose_name='Total Numbers of Farmers')),
                ('TOTAL_LBS_NUTMEG_BOUGHT', models.IntegerField(default=0, null=True, verbose_name='Total lbs of nutmeg bought')),
                ('NUM_OF_BAGS', models.IntegerField(default=0, verbose_name='Number of Bags')),
                ('START_DRYING_DATE', models.DateField(null=True, verbose_name='Start drying date')),
                ('APPROX_END_DRYING_DATE', models.DateField(null=True, verbose_name='Approximate end drying date')),
                ('END_DRYING_DATE', models.DateField(null=True, verbose_name='End drying date')),
                ('ShelfG', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('Section', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('Shelf', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('Tray', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('WeightG_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightG_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightG_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightG_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightH_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightH_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightH_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightH_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightM_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightM_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightM_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightM_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightU_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightU_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightU_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightU_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightGP_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightGP_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightGP_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('WeightGP_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureG_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureH_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureM_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureU_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_GF', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_1F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_2F', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('MoistureGP_FL', models.CharField(blank=True, max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_0_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_0_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_0_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_0_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_0_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_0_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_0_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_0_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_0_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfG_0_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayG_0_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionG_0_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_0_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_0_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_0_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_0_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_0_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_0_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_0_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_0_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_0_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfH_0_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayH_0_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionH_0_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_0_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_0_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_0_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_0_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_0_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_0_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_0_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_0_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_0_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfM_0_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayM_0_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionM_0_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_0_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_0_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_0_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_0_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_0_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_0_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_0_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_0_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_0_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfU_0_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayU_0_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionU_0_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_0_GF', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_0_GF', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_0_GF', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_0_1F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_0_1F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_0_1F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_0_2F', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_0_2F', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_0_2F', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('ShelfGP_0_FL', models.CharField(blank=True, choices=[('', '--Select shelf--'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L')], max_length=50, null=True, verbose_name='Shelf')),
                ('TrayGP_0_FL', models.CharField(blank=True, choices=[('', '--Select Tray--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=50, null=True, verbose_name='Tray')),
                ('SectionGP_0_FL', models.CharField(blank=True, choices=[('', '--Select Section--'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], max_length=50, null=True, verbose_name='Section')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('LOCATION3', models.CharField(choices=[('', '--Select Location--'), ('Ground Floor', 'Ground Floor'), ('1st Floor', '1st Floor'), ('2nd Floor', '2nd Floor'), ('Loft', 'Loft')], max_length=50, verbose_name='Location')),
                ('DEFECT', models.CharField(choices=[('', '--Select Location--'), ('Cracked', 'Cracked'), ('Grow Heads', 'Grow Heads'), ('Lights', 'Lights'), ('Mould', 'Mould')], default='A', max_length=50, verbose_name='Defect')),
                ('PREDOMINANT_DEFECT', models.CharField(choices=[('', '--Select Location--'), ('Cracked', 'Cracked'), ('Grow Heads', 'Grow Heads'), ('Lights', 'Lights'), ('Mould', 'Mould')], max_length=50, verbose_name='Predominant Defect')),
                ('ALERT', models.CharField(blank=True, choices=[('', 'Send Alert?'), ('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True, verbose_name='Alert')),
                ('ALERT_cont', models.CharField(blank=True, max_length=50, null=True, verbose_name='Alert')),
                ('STATION2', models.CharField(max_length=50, null=True, verbose_name='Station')),
                ('Sampling_from_gouyvae', models.CharField(max_length=50, null=True, verbose_name='Sampling from Gouyvae')),
                ('Control_number', models.CharField(max_length=50, null=True, verbose_name='Control Number')),
            ],
        ),
        migrations.CreateModel(
            name='inspector_symmary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('estimated_annual_production', models.CharField(max_length=50, null=True, verbose_name='Enter estimated annual production')),
                ('estimated_peak_productions', models.CharField(max_length=50, null=True, verbose_name='Enter estimated peak production')),
                ('inspected_by', models.DateField(null=True, verbose_name='Inspection Date')),
                ('date', models.DateField(null=True, verbose_name='Current Date')),
            ],
        ),
        migrations.CreateModel(
            name='Labour_support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('Type_of_Assistance', models.CharField(blank=True, choices=[('', '--Select an option--'), ('GCNA Farm Loan', 'GCNA Farm Loan'), ('GCNA Farm Assistance Program', 'GCNA Farm Assistance Program'), ('MOA Farm Assistance Program', 'MOA Farm Assistance Program'), ('MOA ADAP Program', 'MOA ADAP Program'), ('GCNA Farm Loan', 'GCNA Farm Loan'), ('GCNA Assitance Program', 'GCNA Assitance Program'), ('Grenada Development Bank Project', 'Grenada Development Bank Project'), ('Bank Loan', 'Bank Loan'), ('Grant Fund', 'Grant Fund'), ('Other', 'Other')], max_length=50, null=True)),
                ('Date_Recieved', models.DateField(max_length=50, null=True)),
                ('Nature_of_Assistance', models.CharField(blank=True, choices=[('', '--Select an option--'), ('Land Clearing', 'Land Clearing'), ('Drainage', 'Drainage'), ('Weed Control', 'Weed Control'), ('Fertilizing', 'Fertilizing'), ('Pruning', 'Pruning'), ('Harvesting', 'Harvesting'), ('Planting/transplanting', 'Planting/transplanting'), ('Pest/Disease', 'Pest/Disease'), ('Management', 'Management'), ('Other', 'Other')], max_length=50, null=True)),
                ('Nature_of_Assistance_cont', models.CharField(blank=True, max_length=50, null=True)),
                ('Objective_of_the_Assistance', models.CharField(blank=True, choices=[('', '--Select an option--'), ('Procurments of Farm inputs to increase farm productivity', 'Procurments of Farm inputs to increase farm productivity'), ('Farm labour support to increase production', 'Farm labour support to increase production'), ('Other', 'Other')], max_length=75, null=True)),
                ('Objective_of_the_Assistance_cont', models.CharField(blank=True, max_length=50, null=True)),
                ('Facilitator_of_the_Assistance', models.CharField(blank=True, choices=[('', '--Select an option--'), ('Ministry of Agriculture(MOA)- World Bank', 'Ministry of Agriculture(MOA)- World Bank'), ('Grenada Development(GDB)', 'Grenada Development(GDB)'), ('GEF', 'GEF'), ('GIDC', 'GIDC'), ('GCNA', 'GCNA'), ('GCA', 'GCA'), ('Other', 'Other')], max_length=50, null=True)),
                ('Facilitator_of_the_Assistance_cont', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='land_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_type', models.CharField(choices=[('', '--Select an option--'), ('Nutmeg', 'Nutmeg'), ('Coconut', 'Coconut')], default='P', max_length=100)),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('training', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('visit', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, default=0.0, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, default=0.0, max_digits=9)),
                ('acreage', models.CharField(max_length=50, null=True)),
                ('insurance_zone', models.CharField(max_length=50, null=True)),
                ('land_elevation', models.CharField(choices=[('', '--Select an option--'), ('Low Belt', 'Low Belt'), ('Middle Belt', 'Middle Belt'), ('High Belt', 'High Belt')], default='Select', max_length=100)),
                ('soil_type', models.CharField(choices=[('', '--Select an option--'), ('Sandy Soil', 'Sandy Soil'), ('Clay Soil', 'Clay Soil'), ('Stilt Soil', 'Stilt Soil'), ('Loamy Soil', 'Loamy Soil'), ('Clay Loam Soil', 'Clay Loam Soil'), ('Sandy Loam Soil', 'Sandy Loam Soil')], default='P', max_length=100)),
                ('rainfall_pattern', models.CharField(choices=[('', '--Select an option--'), ('Persistent', 'Persistent'), ('Occasional', 'Occasional'), ('Mild', 'Mild')], default='P', max_length=100)),
                ('Mature_trees_25_years_quantity', models.IntegerField(blank=True, default=0, verbose_name='Number of Mature trees older than 25 years')),
                ('Mature_trees_25_years_estimated_production', models.IntegerField(default=0, verbose_name='Estimated production for Mature older than 25 years')),
                ('Bearing_trees_16_24_years_quantity', models.IntegerField(blank=True, default=0, verbose_name='Number of Bearing trees between 16 to 24')),
                ('Bearing_trees_16_24_years', models.IntegerField(blank=True, default=0, verbose_name='Estimated production Bearing trees between 16 to 24')),
                ('Bearing_trees_6_15_years_quantity', models.IntegerField(blank=True, default=0, verbose_name='Number of Bearing trees between 6 to 14')),
                ('Bearing_trees_6_15_years_estimated_production', models.IntegerField(blank=True, default=0, verbose_name='Estimated production Bearing trees between 6 to 14')),
                ('Non_Bearing_trees_5_years_quantity', models.IntegerField(blank=True, default=0, verbose_name='Number of Non-Bearing trees younger than 5 years')),
                ('Non_Bearing_trees_5_years_estimated_production', models.IntegerField(blank=True, default=0, verbose_name='Estimated production for Non-bearing trees younger than 5 years')),
                ('Estimated_peak_period', models.IntegerField(blank=True, default=0, verbose_name='What is the estimated peak period?')),
                ('End_Use_Atlantic_Tall', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the intended end use if the Atlantic Tall Tree')),
                ('End_Use_Dwarf', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the intended end use of the Dwarf Tree')),
                ('No_of_Bearing_Trees_Atlantic_Tall', models.IntegerField(blank=True, default=0, verbose_name='What is the number of Bearing trees for Atlantic Tall Trees')),
                ('No_of_Bearing_Trees_Dwarf', models.IntegerField(blank=True, default=0, verbose_name='What is the number of Bearing trees for Dwarf Trees')),
                ('Estimated_Productiom_Atlantic_Tall', models.IntegerField(blank=True, default=0, verbose_name='What is the estimated production of Atlantic Tall Trees')),
                ('Estimated_Productiom_Dwarf', models.IntegerField(blank=True, default=0, verbose_name='What is the estimated production of Dwarf Trees')),
                ('No_of_Non_Bearing_Trees_Atlantic_Tall', models.IntegerField(blank=True, default=0, verbose_name='What is the number of Non-Bearing trees for Atlantic Tall Trees')),
                ('No_of_Non_Bearing_Trees_Dwarf', models.IntegerField(blank=True, default=0, verbose_name='What is the number of Non-Bearing Dwarf Trees')),
                ('Presence_of_Disease_Atlantic_Tall', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the state disease for Atlantic Tall Trees')),
                ('Presence_of_Disease_Dwarf', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the state disease for Dwarf Trees')),
                ('Cultivation_Atlantic_Tall', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the state of the Atlantic Tall Tree cultivation')),
                ('Cultivation_Dwarf', models.CharField(blank=True, max_length=50, null=True, verbose_name='What is the state of the Dwarf Tree cultivation')),
            ],
        ),
        migrations.CreateModel(
            name='Land_Tenur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('farm_type', models.CharField(choices=[('', '--Select an option--'), ('Nutmeg', 'Nutmeg'), ('Coconut', 'Coconut')], default='P', max_length=100)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('training', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('Owner_Legal_Title', models.CharField(max_length=50, null=True)),
                ('Freehold', models.CharField(max_length=50, null=True)),
                ('Family', models.CharField(max_length=100, null=True)),
                ('Leashold', models.CharField(max_length=50, null=True)),
                ('Leashold_comment', models.CharField(max_length=50, null=True)),
                ('Caretaker', models.CharField(max_length=50, null=True)),
                ('Agent', models.CharField(max_length=50, null=True)),
                ('No_Legal_Title', models.CharField(max_length=50, null=True)),
                ('Status', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Frequency', models.CharField(choices=[('', '--Select an option--'), ('Regular', 'Regular'), ('Occasional', 'Occasional'), ('Never', 'Never')], default='P', max_length=100, verbose_name='Select the frequency that best corresponds with the farm.')),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('farm_type', models.CharField(choices=[('', '--Select an option--'), ('Normal', 'Normal'), ('Seasonal', 'Seasonal'), ('Abandoned', 'Abandoned')], default='P', max_length=100, verbose_name='Select the land type that best corresponds with the farm.')),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True, unique=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True, unique=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Mature_trees_25_years_quantity', models.IntegerField(default=0, verbose_name='Number of Mature trees older than 25 years')),
                ('Mature_trees_25_years_estimated_production', models.IntegerField(default=0, verbose_name='Estimated production for Mature older than 25 years')),
                ('Bearing_trees_16_24_years_quantity', models.IntegerField(default=0, verbose_name='Number of Bearing trees between 16 to 24')),
                ('Bearing_trees_16_24_years', models.IntegerField(default=0, verbose_name='Estimated production Bearing trees between 16 to 24')),
                ('Bearing_trees_6_15_years_quantity', models.IntegerField(default=0, verbose_name='Number of Bearing trees between 6 to 14')),
                ('Bearing_trees_6_15_years_estimated_production', models.IntegerField(default=0, verbose_name='Estimated production Bearing trees between 6 to 14')),
                ('Non_Bearing_trees_5_years_quantity', models.IntegerField(default=0, verbose_name='Number of Non-Bearing trees younger than 5 years')),
                ('Non_Bearing_trees_5_years_estimated_production', models.IntegerField(default=0, verbose_name='Estimated production for Non-bearing trees younger than 5 years')),
                ('Estimated_peak_period', models.IntegerField(default=0, verbose_name='What is the estimated peak period?')),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Variety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Banda', models.CharField(max_length=50, null=True, verbose_name='Is the Banda nutmeg present?')),
                ('Papua', models.CharField(max_length=50, null=True, verbose_name='Is the Papua nutmeg present?')),
                ('Malayan_Indonesia', models.CharField(max_length=50, null=True, verbose_name='Is the Malayan Indonesia nutmeg present?')),
                ('dominant_Variety', models.CharField(max_length=50, null=True, verbose_name='What nutmeg type is the most common?')),
            ],
        ),
        migrations.CreateModel(
            name='Other_Crops_Cultivated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('Name_of_Crops', models.CharField(max_length=50, null=True)),
                ('Number_of_Trees_or_stools', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Seasoning_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('No_of_Stools_chive', models.IntegerField(default=0, verbose_name='What is the number of stools  for chive')),
                ('No_of_Stools_Thyme', models.IntegerField(default=0, verbose_name='What is the number of stools  for Thyme')),
                ('No_of_Stools_Celery', models.IntegerField(default=0, verbose_name='What is the number of stools  for Celery')),
                ('No_of_Stools_Parsley', models.IntegerField(default=0, verbose_name='What is the number of stools for Parsley')),
                ('No_of_Stools_Petit_Bum', models.IntegerField(default=0, verbose_name='What is the number of stools  for Petit Bum')),
                ('No_of_Stools_Seasoning_Pepper', models.IntegerField(default=0, verbose_name='What is the number of stools  for Seasoning pepper')),
                ('No_of_Stools_Hot_Pepper', models.IntegerField(default=0, verbose_name='What is the number of stools for Hot pepper')),
                ('Presence_of_Disease_chive', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for chive')),
                ('Presence_of_Disease_Thyme', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Thyme')),
                ('Presence_of_Disease_Celery', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Celery')),
                ('Presence_of_Disease_Parsley', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Parsley')),
                ('Presence_of_Disease_Petit_Bum', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Petit Bum ')),
                ('Presence_of_Disease_Seasoning_Pepper', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Seasoning pepper')),
                ('Presence_of_Disease_Hot_Pepper', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Hot pepper')),
                ('Cultivation_chive', models.CharField(max_length=50, null=True, verbose_name='What is the state of the chive cultivation')),
                ('Cultivation_Thyme', models.CharField(max_length=50, null=True, verbose_name='What is the state of the THYME cultivation')),
                ('Cultivation_Celery', models.CharField(max_length=50, null=True, verbose_name='What is the state of the celery cultivation')),
                ('Cultivation_Parsley', models.CharField(max_length=50, null=True, verbose_name='What is the state of the parsley cultivation')),
                ('Cultivation_Petit_Bum', models.CharField(max_length=50, null=True, verbose_name='What is the state of the pwtit bum cultivation')),
                ('Cultivation_Seasoning_Pepper', models.CharField(max_length=50, null=True, verbose_name='What is the state of the seasoning pepper cultivation')),
                ('Cultivation_Hot_Pepper', models.CharField(max_length=50, null=True, verbose_name='What is the state of the hot pepper cultivation')),
            ],
        ),
        migrations.CreateModel(
            name='Other_Spices_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('No_of_Bearing_Trees_Clove', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for clove')),
                ('No_of_Bearing_Trees_Cinnamon', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Cinnamon')),
                ('No_of_Bearing_Trees_Bayleaf', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Bayleaf')),
                ('No_of_Bearing_Trees_Tumeric', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Tumeric')),
                ('No_of_Bearing_Trees_Ginger', models.IntegerField(default=0, verbose_name='What is the number of Bearing trees for Ginger')),
                ('Estimated_Productiom_Clove', models.IntegerField(default=0, verbose_name='What is the estimated production of clove')),
                ('Estimated_Productiom_Cinnamon', models.IntegerField(default=0, verbose_name='What is the estimated production of Cinnamon')),
                ('Estimated_Productiom_Bayleaf', models.IntegerField(default=0, verbose_name='What is the estimated production of Bayleaf')),
                ('Estimated_Productiom_Tumeric', models.IntegerField(default=0, verbose_name='What is the estimated production of Tumeric')),
                ('Estimated_Productiom_Ginger', models.IntegerField(default=0, verbose_name='What is the estimated production of Ginger')),
                ('No_of_Non_Bearing_Trees_Clove', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for clove')),
                ('No_of_Non_Bearing_Trees_Cinnamon', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Cinnamon')),
                ('No_of_Non_Bearing_Trees_Bayleaf', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Bayleaf')),
                ('No_of_Non_Bearing_Trees_Tumeric', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Tumeric')),
                ('No_of_Non_Bearing_Trees_Ginger', models.IntegerField(default=0, verbose_name='What is the number of Non-Bearing trees for Ginger')),
                ('Presence_of_Disease_Clove', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Clove')),
                ('Presence_of_Disease_Cinnamon', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Cinnamon')),
                ('Presence_of_Disease_Bayleaf', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Bayleaf')),
                ('Presence_of_Disease_Tumeric', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Tumeric')),
                ('Presence_of_Disease_Ginger', models.CharField(max_length=50, null=True, verbose_name='What is the state disease for Ginger')),
                ('Cultivation_Clove', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Clove cultivation')),
                ('Cultivation_Cinnamon', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Cinnamon cultivation')),
                ('Cultivation_Bayleaf', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Bayleaf cultivation')),
                ('Cultivation_Tumeric', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Tumeric cultivation')),
                ('Cultivation_Ginger', models.CharField(max_length=50, null=True, verbose_name='What is the state of the Ginger cultivation')),
            ],
        ),
        migrations.CreateModel(
            name='Package_Ciontrol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('PRODUCT_DESCRIPTION', models.CharField(choices=[('', '--Select Description--'), ('SUNS', 'SUNS'), ('GROUND NUTMEG', 'GROUND NUTMEG'), ('CRACKED NUTMEG', 'CRACKED NUTMEG'), ('110’S', ' 110’S'), ('80’S', ' 80’S'), ('GUNS', 'GUNS'), ('MACE', 'MACE'), ('Others', 'Others')], default='A', max_length=50, verbose_name='Product Description')),
                ('PRODUCT_DESCRIPTION_cont', models.CharField(max_length=50, null=True)),
                ('START', models.DateField(null=True, verbose_name='Start  date')),
                ('END', models.DateField(null=True, verbose_name='End date')),
                ('QUANTITY_OF_BAGS', models.IntegerField(default=0, verbose_name='Quantity of Bags')),
                ('TOTAL_WEIGHT_LBS', models.CharField(max_length=50, null=True, verbose_name='Total weight in lbs')),
                ('PACKAGING_MATERIAL', models.CharField(choices=[('', '--Select Location--'), ('Jute', 'Jute'), ('Polypropylene', 'Polypropylene'), ('Other', 'Other')], default='A', max_length=50, verbose_name='Pakaging Material')),
                ('PACKAGING_MATERIAL_cont', models.CharField(max_length=50, null=True)),
                ('BATCH_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Batch Number')),
                ('CONTRACT_NUMBER', models.CharField(max_length=50, null=True, verbose_name='Contract Shipment Number')),
                ('OFFICIAL_LAB_RESULTS', models.CharField(max_length=50, null=True, verbose_name='Official Lab Results')),
                ('Nutmeg_Assorted_cont', models.CharField(max_length=50, null=True)),
                ('Physical_Analysis', models.CharField(choices=[('', '--Select Location--'), ('Jute', 'Jute'), ('Polypropylene', 'Polypropylene'), ('Other', 'Other')], default='A', max_length=50, verbose_name='Pakaging Material')),
                ('Chemical_Analysis', models.CharField(choices=[('', '--Select Location--'), ('Jute', 'Jute'), ('Polypropylene', 'Polypropylene'), ('Other', 'Other')], default='A', max_length=50, verbose_name='Pakaging Material')),
                ('Microbiological_Analysis', models.CharField(choices=[('', '--Select Location--'), ('Jute', 'Jute'), ('Polypropylene', 'Polypropylene'), ('Other', 'Other')], default='A', max_length=50, verbose_name='Pakaging Material')),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Pesticides', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Was pesticides used?')),
                ('Septic_Tanks', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Are septic tanks used? ')),
                ('Other', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Potential_Risks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Slides', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Did land slides occur recently?')),
                ('Flooding', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Did flooding occur recently?')),
                ('Heavy_Metal', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Are Heavy Metals present?')),
                ('Chemical_Spills', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Are chemical Spills present?')),
                ('Dumping_of_trash', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Did the dumping of trash occur recently?')),
                ('Feedlot', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is a feedlot Present?')),
            ],
        ),
        migrations.CreateModel(
            name='Quality_Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_Created', models.DateField(blank=True, null=True, verbose_name='Date Created')),
                ('DATE_1', models.DateField(null=True)),
                ('STATION', models.CharField(choices=[('', 'Select Station'), ('Beaulieu', 'Beaulieu'), ('Gouyave', 'Gouyave'), ('Grenville', 'Grenville')], max_length=50, null=True)),
                ('BATCH_NUMBER', models.IntegerField(default=0)),
                ('REWORK', models.CharField(choices=[('', 'Select'), ('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('SAMPLE_WEIGHT', models.FloatField(default=0)),
                ('Nutmeg_Assorted', models.CharField(choices=[('', 'Select'), ('Sounds', 'Sounds'), ('Lights', 'Lights'), ("110's", "110's"), ('Other', 'Other')], max_length=50, null=True)),
                ('Nutmeg_Assorted2', models.CharField(choices=[('', 'Select'), ('Sounds', 'Sounds'), ('Lights', 'Lights'), ("110's", "110's"), ('Other', 'Other')], max_length=50, null=True)),
                ('Nutmeg_Assorted_cont', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1', models.CharField(max_length=50, null=True)),
                ('ASSORTOR6', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1_A', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1_B', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1_C', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1_D', models.CharField(max_length=50, null=True)),
                ('ASSORTOR1_E', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2_A', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2_B', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2_C', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2_D', models.CharField(max_length=50, null=True)),
                ('ASSORTOR2_E', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3_A', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3_B', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3_C', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3_D', models.CharField(max_length=50, null=True)),
                ('ASSORTOR3_E', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4_A', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4_B', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4_C', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4_D', models.CharField(max_length=50, null=True)),
                ('ASSORTOR4_E', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5_A', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5_B', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5_C', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5_D', models.CharField(max_length=50, null=True)),
                ('ASSORTOR5_E', models.CharField(max_length=50, null=True)),
                ('SUPERVISOR_A', models.CharField(max_length=50, null=True)),
                ('SUPERVISOR_B', models.CharField(max_length=50, null=True)),
                ('SUPERVISOR_C', models.CharField(max_length=50, null=True)),
                ('SUPERVISOR_D', models.CharField(max_length=50, null=True)),
                ('SUPERVISOR_E', models.CharField(max_length=50, null=True)),
                ('SOUNDS', models.FloatField(default=0)),
                ('PINHOLES', models.FloatField(default=0)),
                ('CRACKED', models.FloatField(default=0)),
                ('BROKEN', models.FloatField(default=0)),
                ('PIECES', models.FloatField(default=0)),
                ('FOREIGN_MATTER', models.FloatField(default=0)),
                ('SUPERVISOR', models.CharField(max_length=50, null=True)),
                ('COMMENTS', models.TextField(blank=True)),
                ('Approved_BY', models.CharField(max_length=50, null=True)),
                ('Station_Manager', models.CharField(max_length=50, null=True)),
                ('DATE_OF_REPORT', models.DateField(null=True)),
                ('SIGNED_BY_QUALITY_ASSURANCE_OFFICER', models.CharField(max_length=50, null=True)),
                ('DATE_2', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Road_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('Road_Access', models.CharField(choices=[('', '--Select an option--'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1, verbose_name='Is road access available?')),
            ],
        ),
        migrations.CreateModel(
            name='Sanitation_A',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Station', models.CharField(max_length=50, null=True)),
                ('Period', models.CharField(max_length=50, null=True)),
                ('Ceiling_week_1', models.CharField(max_length=50, null=True)),
                ('Ceiling_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Ceiling_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Ceiling_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Ceiling_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Ceiling_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Windows_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Screens_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Grinder_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Winnower_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Scales_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Hoist_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Drying_Racks_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Shining_Cloths_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Stencil_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Packaging_Store_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Fumigation_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Chambers_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_week_1', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_week_2', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_week_3', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_week_4', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_week_5', models.CharField(blank=True, max_length=50, null=True)),
                ('Tourist_Shop_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Verified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('Date', models.DateField(blank=True, null=True, verbose_name='Date of Verification')),
            ],
        ),
        migrations.CreateModel(
            name='Sanitation_B',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Station', models.CharField(max_length=50, null=True)),
                ('Week_of', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_Loading_Dock_monday', models.CharField(max_length=50, null=True)),
                ('Pavement_Loading_Dock_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_Loading_Dock_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_Loading_Dock_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_Loading_Dock_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_Loading_Dock_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_Area_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Agitating_Tray_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Cracker_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Rakes_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Wire_Baskets_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Buckets_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Scoops_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Administrative_Officer_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Restrooms_Luncheon_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Change_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Kitchen_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Process_Floor_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Immersion_Room_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_monday', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_tuesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_wednesday', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_thursday', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_friday', models.CharField(blank=True, max_length=50, null=True)),
                ('Sinks_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Verified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('Date', models.DateField(blank=True, null=True, verbose_name='Date of Verification')),
            ],
        ),
        migrations.CreateModel(
            name='Sanitation_C',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Station', models.CharField(max_length=50, null=True)),
                ('Week_of', models.CharField(blank=True, max_length=50, null=True)),
                ('Drains_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Drains_Date', models.DateField(blank=True, null=True, verbose_name='Date Performed')),
                ('Pavement_load_dock_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Pavement_load_dock_Date', models.DateField(blank=True, null=True, verbose_name='Date Performed')),
                ('General_Grounds_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('General_Grounds_Date', models.DateField(blank=True, null=True, verbose_name='Date Performed')),
                ('Receiving_area_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Receiving_area_Date', models.DateField(blank=True, null=True, verbose_name='Date Performed')),
                ('Walls_vents_blocks_signature', models.CharField(blank=True, max_length=50, null=True)),
                ('Walls_vents_blocks_Date', models.DateField(blank=True, null=True, verbose_name='Date Performed')),
                ('comments', models.CharField(blank=True, max_length=50, null=True)),
                ('Verified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('Date', models.DateField(blank=True, null=True, verbose_name='Date of Verification')),
            ],
        ),
        migrations.CreateModel(
            name='Shelves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry', models.IntegerField(blank=True, null=True)),
                ('floor', models.CharField(blank=True, max_length=50, null=True)),
                ('station', models.CharField(blank=True, max_length=50, null=True)),
                ('Shelf', models.CharField(blank=True, max_length=50, null=True)),
                ('Tray', models.CharField(blank=True, max_length=50, null=True)),
                ('Section', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Training_support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('Type_of_Training', models.CharField(choices=[('', '--Select an option--'), ('GAP', 'GAP'), ('GMP', 'GMP'), ('HACCP', 'HACCP'), ('Use of small farming tools and equipment', 'Use of small farming tools and equipment'), ('Land Use', 'Land Use'), ('Pest and Disease', 'Pest and Disease'), ('Management', 'Management'), ('Post Harvesting Handling', 'Post Harvesting Handling'), ('Harvesting', 'Harvesting'), ('Grafting', 'Grafting'), ('Farm Management', 'Farm Management'), ('Other', 'Other')], max_length=50, null=True)),
                ('Type_of_Training_cont', models.CharField(blank=True, max_length=50, null=True)),
                ('Date_Recieved', models.DateField(max_length=50, null=True)),
                ('Objective_of_the_Training', models.CharField(choices=[('', '--Select an option--'), ('Increase farm productivity', 'Increase farm productivity'), ('Improve the quality of produce', 'Improve the quality of produce'), ('Technical Knowledge', 'Technical Knowledge'), ('Increase from production', 'Increase from production'), ('Improve harvesting', 'Improve harvesting'), ('Farm Buisness Management', 'Farm Buisness Management'), ('Improve the quality of plants', 'Improve the quality of plants'), ('Other', 'Other')], max_length=50, null=True)),
                ('Objective_of_the_Training_cont', models.CharField(blank=True, max_length=50, null=True)),
                ('Facilitator_of_the_Training', models.CharField(choices=[('', '--Select an option--'), ('GCNA', 'GCNA'), ('GCA', 'GCA'), ('MOA', 'MOA'), ('GIDC', 'GIDC'), ('Bureau of Standards', 'Bureau of Standards'), ('UNDP/SAEP', 'UNDP/SAEP'), ('Other', 'Other')], max_length=50, null=True)),
                ('Facilitator_of_the_Training_cont', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('purpose_of_visit', models.CharField(max_length=50, null=True)),
                ('Date_of_visit', models.DateField(null=True, verbose_name='Visit Date')),
                ('parish', models.CharField(max_length=50, null=True)),
                ('training', models.CharField(max_length=50, null=True)),
                ('tenurship', models.CharField(choices=[('', '--Select an option--'), ('Owned', 'Owned'), ('Freehold', 'Freehold'), ('Leased', 'Leased'), ('Family Land', 'Family Land'), ('ShareCrop', 'ShareCrop'), ('Rent', 'Rent'), ('Rented free', 'Rented free'), ('Premission to work land', 'Premission to work land'), ('Squatted', 'Squatted'), ('Government Land', 'Government Land'), ('Other', 'Other'), ('Caretaker', 'Caretaker'), ('Administrator', 'Administrator')], max_length=100, null=True)),
                ('tenurship_cont', models.CharField(blank=True, max_length=50, null=True)),
                ('visit', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worker_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Worker_ID_No', models.CharField(max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Crops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Land_ID_N0', models.CharField(default=gcna_data.models.land_id, max_length=20)),
                ('Worker_ID_No', models.CharField(max_length=50, null=True)),
                ('Nutmeg_ID_No', models.CharField(max_length=50, null=True)),
                ('other_crops', models.ManyToManyField(to='gcna_data.crop')),
            ],
        ),
        migrations.CreateModel(
            name='fullform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_ID', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('GPS_location', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('age', models.CharField(choices=[('A', '18-25'), ('B', '26-35'), ('C', '36-60'), ('D', '61+')], default='A', max_length=1)),
                ('titles', models.CharField(max_length=50, null=True)),
                ('family', models.CharField(max_length=50, null=True)),
                ('lease', models.CharField(max_length=100, null=True)),
                ('caretaker', models.CharField(max_length=50, null=True)),
                ('agent', models.CharField(max_length=50, null=True)),
                ('comments', models.TextField(blank=True)),
                ('Tree_types', models.CharField(choices=[('', '--Select an option--'), ('Nutmeg', 'Nutmeg'), ('Coconut', 'Coconut')], default='A', max_length=50)),
                ('Mature_trees', models.IntegerField(default=0)),
                ('Bearing_trees', models.IntegerField(default=0)),
                ('NonBearing_trees', models.IntegerField(default=0)),
                ('land_elevation', models.CharField(choices=[('', '--Select an option--'), ('Low Belt', 'Low Belt'), ('Middle Belt', 'Middle Belt'), ('High Belt', 'High Belt')], default='P', max_length=100)),
                ('soil_type', models.CharField(choices=[('', '--Select an option--'), ('Sandy Soil', 'Sandy Soil'), ('Clay Soil', 'Clay Soil'), ('Stilt Soil', 'Stilt Soil'), ('Peat Soil', 'Peat Soil'), ('Chalk Soil', 'Chalk Soil'), ('Loamy Soil', 'Loamy Soil'), ('Clay Loam Soil', 'Clay Loam Soil'), ('Sandy Loam Soil', 'Sandy Loam Soil')], default='P', max_length=100)),
                ('rainfall_pattern', models.CharField(choices=[('', 'Select'), ('Persistent', 'Persistent'), ('Occasional', 'Occasional'), ('Mild', 'Mild')], default='P', max_length=100)),
                ('intercrop', models.CharField(max_length=50, null=True)),
                ('pure_stand', models.CharField(max_length=50, null=True)),
                ('norm_land', models.CharField(max_length=50, null=True)),
                ('seas_land', models.CharField(max_length=50, null=True)),
                ('aban_land', models.CharField(max_length=50, null=True)),
                ('road_access', models.CharField(max_length=50, null=True)),
                ('land_slide', models.CharField(max_length=50, null=True)),
                ('flooding', models.CharField(max_length=50, null=True)),
                ('heavy_metals', models.CharField(max_length=50, null=True)),
                ('chemical_spills', models.CharField(max_length=50, null=True)),
                ('dumping', models.CharField(max_length=50, null=True)),
                ('feedlot', models.CharField(max_length=50, null=True)),
                ('pesticides', models.CharField(max_length=50, null=True)),
                ('septic_tanks', models.CharField(max_length=50, null=True)),
                ('manical', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('river', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('spring', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('well', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('harvested', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('treated', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('annual_production', models.CharField(max_length=50, null=True)),
                ('peak_productions', models.CharField(max_length=50, null=True)),
                ('inspected_by', models.DateField(null=True, verbose_name='Inspection Date')),
                ('date', models.DateField(null=True, verbose_name='Current Date')),
                ('other_crops', models.ManyToManyField(to='gcna_data.crop')),
            ],
        ),
    ]
